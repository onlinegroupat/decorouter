{"version":3,"sources":["webpack:///webpack/bootstrap 9b4b96f78e3543dca28c","webpack:///./~/route-parser/lib/route/nodes.js","webpack:///./~/route-parser/lib/route/visitors/create_visitor.js","webpack:///./src/main/index.ts","webpack:///./~/route-parser/index.js","webpack:///./~/route-parser/lib/route.js","webpack:///./~/route-parser/lib/route/compiled-grammar.js","webpack:///./~/route-parser/lib/route/parser.js","webpack:///./~/route-parser/lib/route/visitors/regexp.js","webpack:///./~/route-parser/lib/route/visitors/reverse.js","webpack:///./src/example/index.ts"],"names":[],"mappings":"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C,CAAC;QAC3D,CAAC;IACL,CAAC;AACL,CAAC;AAhBD,sBAgBC;AAED,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAEvB,cAAM,GAAU,UAAU,CAAC;;;;;;;;AC9OxC;AACA;AACA;AACA;;AAEA;;;AAGA,uB;;;;;;;ACRA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,YAAY,OAAO;AACnB,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACrEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,eAAe,kCAAkC;AACjD,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA,qBAAqB,IAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mJAAmJ;AACnJ,SAAS;;AAET;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW,YAAY,IAAI,WAAW,SAAS;AACvE,cAAc,yBAAyB,EAAE;AACzC,MAAM;AACN,WAAW,8KAA8K;AACzL,aAAa,mEAAmE;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB,kBAAkB,UAAU;AACjD;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,SAAS,iEAAiE,EAAE,MAAM,EAAE,2DAA2D,EAAE,QAAQ,mEAAmE,sDAAsD,4CAA4C,QAAQ,eAAe,4DAA4D;AACjZ,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,aAAa,WAAW;AACxB,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,CAAC;;;AAGD;AACA;AACA;AACA,6BAA6B,8CAA8C;AAC3E,C;;;;;;;ACvnBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACRA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED,+B;;;;;;;AChGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,uCAAuC,oBAAoB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,gC;;;;;;;;;;;;;;;;;;ACjEA,uCAA8E;AAG9E,IAAM,OAAO,GAAb;IAEW,KAAK;QACR,OAAO,CAAC,SAAS,GAAG,cAAc,CAAC;IACvC,CAAC;IAGM,KAAK;QACR,OAAO,CAAC,SAAS,GAAG,cAAc,CAAC;IACvC,CAAC;IAGM,MAAM,CAAsB,KAAY;QAC3C,OAAO,CAAC,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC;IAC1C,CAAC;IAGM,OAAO;QACV,OAAO,CAAC,SAAS,GAAG,sBAAsB,CAAC;IAC/C,CAAC;CACJ;AAlBG;IADC,aAAK,CAAC,OAAO,CAAC;oCAGd;AAGD;IADC,aAAK,CAAC,OAAO,CAAC;oCAGd;AAGD;IADC,aAAK,CAAC,eAAe,CAAC;IACR,6BAAU,CAAC,OAAO,CAAC;qCAEjC;AAGD;IADC,aAAK,CAAC,GAAG,CAAC;sCAGV;AAnBC,OAAO;IADZ,aAAK,CAAC,GAAG,CAAC;GACL,OAAO,CAoBZ;AAED,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;AAE5B,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACjD,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAC7C,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AAE7C,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;IACd,CAAC,CAAC,cAAc,EAAE,CAAC;IACnB,OAAO,CAAC,KAAK,EAAE,CAAC;IAChB,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC,CAAC;AAEF,cAAM,CAAC,IAAI,CAAC,IAAI,4BAAoB,EAAE,CAAC,CAAC","file":"example.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b4b96f78e3543dca28c","'use strict';\n/** @module route/nodes */\n\n\n/**\n * Create a node for use with the parser, giving it a constructor that takes\n * props, children, and returns an object with props, children, and a\n * displayName.\n * @param  {String} displayName The display name for the node\n * @return {{displayName: string, props: Object, children: Array}}\n */\nfunction createNode(displayName) {\n  return function(props, children) {\n    return {\n      displayName: displayName,\n      props: props,\n      children: children || []\n    };\n  };\n}\n\nmodule.exports = {\n  Root: createNode('Root'),\n  Concat: createNode('Concat'),\n  Literal: createNode('Literal'),\n  Splat: createNode('Splat'),\n  Param: createNode('Param'),\n  Optional: createNode('Optional')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/nodes.js\n// module id = 0\n// module chunks = 0","'use strict';\n/**\n * @module route/visitors/create_visitor\n */\n\nvar nodeTypes = Object.keys(require('../nodes'));\n\n/**\n * Helper for creating visitors. Take an object of node name to handler\n * mappings, returns an object with a \"visit\" method that can be called\n * @param  {Object.<string,function(node,context)>} handlers A mapping of node\n * type to visitor functions\n * @return {{visit: function(node,context)}}  A visitor object with a \"visit\"\n * method that can be called on a node with a context\n */\nfunction createVisitor(handlers) {\n  nodeTypes.forEach(function(nodeType) {\n    if( typeof handlers[nodeType] === 'undefined') {\n      throw new Error('No handler defined for ' + nodeType.displayName);\n    }\n\n  });\n\n  return {\n    /**\n     * Call the given handler for this node type\n     * @param  {Object} node    the AST node\n     * @param  {Object} context context to pass through to handlers\n     * @return {Object}\n     */\n    visit: function(node, context) {\n      return this.handlers[node.displayName].call(this,node, context);\n    },\n    handlers: handlers\n  };\n}\n\nmodule.exports = createVisitor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/visitors/create_visitor.js\n// module id = 1\n// module chunks = 0","import * as Route from 'route-parser';\r\n\r\ninterface MethodEntry {\r\n    target:typeof Object;\r\n    methodName:string;\r\n    path:string;\r\n}\r\n\r\ninterface ParamEntry {\r\n    target:typeof Object;\r\n    methodName:string;\r\n    index:number;\r\n    paramName:string;\r\n}\r\n\r\ninterface ObjectEntry {\r\n    obj:Object;\r\n    path:string;\r\n}\r\n\r\nconst methods:MethodEntry[] = [];\r\nconst params:ParamEntry[] = [];\r\nconst objects:ObjectEntry[] = [];\r\n\r\n\r\ntype RouteParams = { [key:string]:string }\r\ntype RouteHandler = (params:RouteParams) => void;\r\n\r\nexport interface LocationProvider {\r\n    location:string;\r\n}\r\n\r\nexport interface Router {\r\n    init(locationProvider:LocationProvider):void;\r\n}\r\n\r\nexport class HashLocationProvider {\r\n    get location():string {\r\n        let currentPath = window.location.hash;\r\n        if (currentPath && currentPath.startsWith('#')) {\r\n            currentPath = currentPath.substring(1);\r\n        }\r\n        return currentPath;\r\n    }\r\n\r\n    set location(location:string) {\r\n        window.location.hash = '#' + location;\r\n    }\r\n}\r\n\r\nclass RouterImpl implements Router {\r\n\r\n    private routes:Map<Object, Map<string, Route>> = new Map<Object, Map<string, Route>>();\r\n\r\n    private locationProvider:LocationProvider;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public init(locationProvider:LocationProvider):void {\r\n\r\n        if (!locationProvider) {\r\n            throw new Error('locationProvider was not specified.');\r\n        }\r\n\r\n        this.locationProvider = locationProvider;\r\n\r\n        this.buildRoutes();\r\n\r\n        window.onpopstate = (e) => {\r\n            this.navigateToPath(this.getCurrentHashLocation());\r\n        };\r\n\r\n        this.navigateToPath(this.getCurrentHashLocation());\r\n    }\r\n\r\n    private getCurrentHashLocation():string {\r\n        let currentPath = window.location.hash;\r\n        if (currentPath && currentPath.startsWith('#')) {\r\n            currentPath = currentPath.substring(1);\r\n        }\r\n\r\n        return currentPath;\r\n    }\r\n\r\n    private buildRoutes() {\r\n\r\n        for (let objectEntry of objects) {\r\n            for (let methodEntry of methods) {\r\n\r\n                if (objectEntry.obj instanceof methodEntry.target.constructor) {\r\n                    let routePath = this.combinePath(objectEntry.path, methodEntry.path);\r\n\r\n                    this.addRoute(objectEntry.obj, methodEntry.methodName, new Route(routePath));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private addRoute(obj:Object, methodName:string, route:Route) {\r\n        let methodRoute:Map<string, Route> = null;\r\n        if (this.routes.has(obj)) {\r\n            methodRoute = this.routes.get(obj);\r\n        }\r\n        else {\r\n            methodRoute = new Map<string, Route>();\r\n            this.routes.set(obj, methodRoute);\r\n        }\r\n\r\n        methodRoute.set(methodName, route);\r\n    }\r\n\r\n    private handleRoute(obj:any, methodName:string, routeParams:RouteParams) {\r\n        // build argument list\r\n        let args:any[] = [];\r\n        for (let paramEntry of params) {\r\n            // check class\r\n            if (obj instanceof paramEntry.target.constructor) {\r\n                // check method\r\n                if (methodName == paramEntry.methodName) {\r\n                    args[paramEntry.index] = routeParams[paramEntry.paramName];\r\n                }\r\n            }\r\n        }\r\n\r\n        // call method\r\n        obj[methodName].call(obj, args);\r\n    }\r\n\r\n    private navigateToPath(path:string) {\r\n\r\n        let found = false;\r\n\r\n        for (let [obj, methodRoutes] of this.routes) {\r\n            for (let [methodName, route] of methodRoutes) {\r\n                let match = route.match(path);\r\n                if (match) {\r\n                    this.handleRoute(obj, methodName, match as RouteParams);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private combinePath(path1:string, path2:string) {\r\n        path1 = path1 || '';\r\n        path2 = path2 || '';\r\n\r\n        if (!path1.endsWith('/') && !path2.startsWith('/')) {\r\n            path1 += '/';\r\n        }\r\n\r\n        return path1 + path2;\r\n    }\r\n\r\n    public maybeAddState(obj:any, methodName:string, args:IArguments) {\r\n        let methodRoutes:Map<string, Route> = this.routes.get(obj);\r\n        let route = methodRoutes.get(methodName);\r\n\r\n        let routeParams:RouteParams = {};\r\n\r\n        for (let paramEntry of params) {\r\n            // check class\r\n            if (obj instanceof paramEntry.target.constructor) {\r\n                // check method\r\n                if (methodName == paramEntry.methodName) {\r\n                    routeParams[paramEntry.paramName] = args[paramEntry.index];\r\n                }\r\n            }\r\n        }\r\n\r\n        let newState = route.reverse(routeParams);\r\n        if (newState) {\r\n            this.locationProvider.location = newState as string;\r\n        }\r\n    }\r\n}\r\n\r\nexport function routeMethod(path:string):Function {\r\n    return (target: typeof Object, methodName: string, descriptor: TypedPropertyDescriptor<any>) => {\r\n\r\n        methods.push({target, methodName, path});\r\n\r\n        let original = descriptor.value;\r\n\r\n        // inject wrapper\r\n        descriptor.value = function() {\r\n            // add state\r\n            routerImpl.maybeAddState(this, methodName, arguments);\r\n\r\n            // call original\r\n            original.apply(this, arguments);\r\n        };\r\n\r\n        return descriptor;\r\n    };\r\n}\r\n\r\nexport function routeClass(path?:string):Function {\r\n    return (target:typeof Object) => {\r\n\r\n        return class Wrapper extends target {\r\n            constructor() {\r\n                super();\r\n                objects.push({ obj: this, path: path });\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function routeParam(paramName:string) {\r\n    return (target:any, methodName:string, index:number) => {\r\n        params.push( {target, methodName, index, paramName });\r\n    };\r\n}\r\n\r\nexport function route(route:string) {\r\n    return (...args : any[]) => {\r\n        switch(args.length) {\r\n            case 1:\r\n                return routeClass(route).apply(this, args);\r\n            case 2:\r\n                throw new Error('decorator @route not supported on properties.');\r\n            case 3:\r\n                if(typeof args[2] === \"number\") {\r\n                    throw new Error('decorator @route not supported on parameters.');\r\n                }\r\n                return routeMethod(route).apply(this, args);\r\n            default:\r\n                throw new Error('unsupported decorator signature');\r\n        }\r\n    }\r\n}\r\n\r\nconst routerImpl = new RouterImpl();\r\n\r\nexport const router:Router = routerImpl;\n\n\n// WEBPACK FOOTER //\n// ./src/main/index.ts","/**\n * @module Passage\n */\n'use strict';\n\nvar Route = require('./lib/route');\n\n\nmodule.exports = Route;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/index.js\n// module id = 3\n// module chunks = 0","'use strict';\nvar Parser = require('./route/parser'),\n    RegexpVisitor = require('./route/visitors/regexp'),\n    ReverseVisitor = require('./route/visitors/reverse');\n\nRoute.prototype = Object.create(null)\n\n/**\n * Match a path against this route, returning the matched parameters if\n * it matches, false if not.\n * @example\n * var route = new Route('/this/is/my/route')\n * route.match('/this/is/my/route') // -> {}\n * @example\n * var route = new Route('/:one/:two')\n * route.match('/foo/bar/') // -> {one: 'foo', two: 'bar'}\n * @param  {string} path the path to match this route against\n * @return {(Object.<string,string>|false)} A map of the matched route\n * parameters, or false if matching failed\n */\nRoute.prototype.match = function(path) {\n  var re = RegexpVisitor.visit(this.ast),\n      matched = re.match(path);\n\n  return matched ? matched : false;\n\n};\n\n/**\n * Reverse a route specification to a path, returning false if it can't be\n * fulfilled\n * @example\n * var route = new Route('/:one/:two')\n * route.reverse({one: 'foo', two: 'bar'}) -> '/foo/bar'\n * @param  {Object} params The parameters to fill in\n * @return {(String|false)} The filled in path\n */\nRoute.prototype.reverse = function(params) {\n  return ReverseVisitor.visit(this.ast, params);\n};\n\n/**\n * Represents a route\n * @example\n * var route = Route('/:foo/:bar');\n * @example\n * var route = Route('/:foo/:bar');\n * @param {string} spec -  the string specification of the route.\n *     use :param for single portion captures, *param for splat style captures,\n *     and () for optional route branches\n * @constructor\n */\nfunction Route(spec) {\n  var route;\n  if (this) {\n    // constructor called with new\n    route = this;\n  } else {\n    // constructor called as a function\n    route = Object.create(Route.prototype);\n  }\n  if( typeof spec === 'undefined' ) {\n    throw new Error('A route spec is required');\n  }\n  route.spec = spec;\n  route.ast = Parser.parse(spec);\n  return route;\n}\n\nmodule.exports = Route;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route.js\n// module id = 4\n// module chunks = 0","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[5,11,12,13,14,15];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"expressions\":4,\"EOF\":5,\"expression\":6,\"optional\":7,\"literal\":8,\"splat\":9,\"param\":10,\"(\":11,\")\":12,\"LITERAL\":13,\"SPLAT\":14,\"PARAM\":15,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",11:\"(\",12:\")\",13:\"LITERAL\",14:\"SPLAT\",15:\"PARAM\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[6,1],[7,3],[8,1],[9,1],[10,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn new yy.Root({},[$$[$0-1]])\nbreak;\ncase 2:\nreturn new yy.Root({},[new yy.Literal({value: ''})])\nbreak;\ncase 3:\nthis.$ = new yy.Concat({},[$$[$0-1],$$[$0]]);\nbreak;\ncase 4: case 5:\nthis.$ = $$[$0];\nbreak;\ncase 6:\nthis.$ = new yy.Literal({value: $$[$0]});\nbreak;\ncase 7:\nthis.$ = new yy.Splat({name: $$[$0]});\nbreak;\ncase 8:\nthis.$ = new yy.Param({name: $$[$0]});\nbreak;\ncase 9:\nthis.$ = new yy.Optional({},[$$[$0-1]]);\nbreak;\ncase 10:\nthis.$ = yytext;\nbreak;\ncase 11: case 12:\nthis.$ = yytext.slice(1);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[3]},{5:[1,13],6:14,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[2,2]},o($V4,[2,4]),o($V4,[2,5]),o($V4,[2,6]),o($V4,[2,7]),o($V4,[2,8]),{4:15,6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},o($V4,[2,10]),o($V4,[2,11]),o($V4,[2,12]),{1:[2,1]},o($V4,[2,3]),{6:14,7:5,8:6,9:7,10:8,11:$V0,12:[1,16],13:$V1,14:$V2,15:$V3},o($V4,[2,9])],\ndefaultActions: {3:[2,2],13:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return \"(\";\nbreak;\ncase 1:return \")\";\nbreak;\ncase 2:return \"SPLAT\";\nbreak;\ncase 3:return \"PARAM\";\nbreak;\ncase 4:return \"LITERAL\";\nbreak;\ncase 5:return \"LITERAL\";\nbreak;\ncase 6:return \"EOF\";\nbreak;\n}\n},\nrules: [/^(?:\\()/,/^(?:\\))/,/^(?:\\*+\\w+)/,/^(?::+\\w+)/,/^(?:[\\w%\\-~\\n]+)/,/^(?:.)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/compiled-grammar.js\n// module id = 5\n// module chunks = 0","/**\n * @module route/parser\n */\n'use strict';\n\n/** Wrap the compiled parser with the context to create node objects */\nvar parser = require('./compiled-grammar').parser;\nparser.yy = require('./nodes');\nmodule.exports = parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/parser.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar createVisitor  = require('./create_visitor'),\n    escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n/**\n * @class\n * @private\n */\nfunction Matcher(options) {\n  this.captures = options.captures;\n  this.re = options.re;\n}\n\n/**\n * Try matching a path against the generated regular expression\n * @param  {String} path The path to try to match\n * @return {Object|false}      matched parameters or false\n */\nMatcher.prototype.match = function (path) {\n  var match = this.re.exec(path),\n      matchParams = {};\n\n  if( !match ) {\n    return;\n  }\n\n  this.captures.forEach( function(capture, i) {\n    if( typeof match[i+1] === 'undefined' ) {\n      matchParams[capture] = undefined;\n    }\n    else {\n      matchParams[capture] = decodeURIComponent(match[i+1]);\n    }\n  });\n\n  return matchParams;\n};\n\n/**\n * Visitor for the AST to create a regular expression matcher\n * @class RegexpVisitor\n * @borrows Visitor-visit\n */\nvar RegexpVisitor = createVisitor({\n  'Concat': function(node) {\n    return node.children\n      .reduce(\n        function(memo, child) {\n          var childResult = this.visit(child);\n          return {\n            re: memo.re + childResult.re,\n            captures: memo.captures.concat(childResult.captures)\n          };\n        }.bind(this),\n        {re: '', captures: []}\n      );\n  },\n  'Literal': function(node) {\n    return {\n      re: node.props.value.replace(escapeRegExp, '\\\\$&'),\n      captures: []\n    };\n  },\n\n  'Splat': function(node) {\n    return {\n      re: '([^?]*?)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Param': function(node) {\n    return {\n      re: '([^\\\\/\\\\?]+)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Optional': function(node) {\n    var child = this.visit(node.children[0]);\n    return {\n      re: '(?:' + child.re + ')?',\n      captures: child.captures\n    };\n  },\n\n  'Root': function(node) {\n    var childResult = this.visit(node.children[0]);\n    return new Matcher({\n      re: new RegExp('^' + childResult.re + '(?=\\\\?|$)' ),\n      captures: childResult.captures\n    });\n  }\n});\n\nmodule.exports = RegexpVisitor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/visitors/regexp.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar createVisitor  = require('./create_visitor');\n\n/**\n * Visitor for the AST to construct a path with filled in parameters\n * @class ReverseVisitor\n * @borrows Visitor-visit\n */\nvar ReverseVisitor = createVisitor({\n  'Concat': function(node, context) {\n    var childResults =  node.children\n      .map( function(child) {\n        return this.visit(child,context);\n      }.bind(this));\n\n    if( childResults.some(function(c) { return c === false; }) ) {\n      return false;\n    }\n    else {\n      return childResults.join('');\n    }\n  },\n\n  'Literal': function(node) {\n    return decodeURI(node.props.value);\n  },\n\n  'Splat': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Param': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Optional': function(node, context) {\n    var childResult = this.visit(node.children[0], context);\n    if( childResult ) {\n      return childResult;\n    }\n    else {\n      return '';\n    }\n  },\n\n  'Root': function(node, context) {\n    context = context || {};\n    var childResult = this.visit(node.children[0], context);\n    if( !childResult ) {\n      return false;\n    }\n    return encodeURI(childResult);\n  }\n});\n\nmodule.exports = ReverseVisitor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/route-parser/lib/route/visitors/reverse.js\n// module id = 8\n// module chunks = 0","\r\nimport {route, router, routeParam, HashLocationProvider} from '../main/index';\r\n\r\n@route('/')\r\nclass Example {\r\n    @route('test1')\r\n    public test1() {\r\n        content.innerText = 'hello, test1';\r\n    }\r\n\r\n    @route('test2')\r\n    public test2() {\r\n        content.innerText = 'hello, test2';\r\n    }\r\n\r\n    @route('custom/:value')\r\n    public custom(@routeParam('value') value:string) {\r\n        content.innerText = 'hello, ' + value;\r\n    }\r\n\r\n    @route('*')\r\n    public noMatch() {\r\n        content.innerText = 'sorry, nothing found';\r\n    }\r\n}\r\n\r\nlet example = new Example();\r\n\r\nlet content = document.getElementById('content');\r\nlet test1 = document.getElementById('test1');\r\nlet test2 = document.getElementById('test2');\r\nlet test3 = document.getElementById('test3');\r\n\r\ntest1.onclick = (e) => {\r\n    e.preventDefault();\r\n    example.test1();\r\n    return false;\r\n};\r\n\r\nrouter.init(new HashLocationProvider());\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/example/index.ts"],"sourceRoot":""}